@page "/categories"

@inject NavigationManager NavigationManager
@inject UseCases.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.IDeleteCategoryUseCase DeleteCategoryUseCase

<h3>Manage Categories</h3>

@if (categories != null)
            {
                
                    <table class="table">
                        <thed>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th></th>
                            </tr>
                        </thed>
                        <tbody>
                            @foreach(var category in categories)
                    {
                        <tr>
                            <td>@category.CategoryName</td>
                            <td>@category.CategoryDescription</td>
                            <td>
                                <button type="button" @onclick="@(() => EditCategory(category))" class="btn btn-link">Edit</button>
                                <button type="button" @onclick="@(() => DeleteCategory(category.CategoryId))" class="btn btn-link">Delete</button>
                            </td>
                        </tr>
                    }
                        </tbody>
                    </table>
            }
<br />
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>


@code {

    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    private void EditCategory(Category category)
        {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
        }

    private void DeleteCategory(int categoryId)
        {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
        }

    private void LoadCategories()
        {
        categories = ViewCategoryUseCase.Execute()?.ToList();
        }
}
